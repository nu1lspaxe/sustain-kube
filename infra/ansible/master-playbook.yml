---
- name: Configure firewall, enable kernel modules, install containerd and kubeadm
  hosts: all
  become: true
  collections:
    - community.general
  tasks:
    - name: Allow SSH connections
      community.general.ufw:
        rule: allow
        port: '22'
        proto: 'tcp'
      notify:
        - Reload and enable firewall
      
    - name: Configure firewall rules
      community.general.ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: "{{ item.proto }}"
      loop:
        - { port: '179', proto: 'tcp' }
        - { port: '4789', proto: 'udp' }
        - { port: '6443', proto: 'tcp' }
        - { port: '2379', proto: 'tcp' }
        - { port: '2380', proto: 'tcp' }
        - { port: '8285', proto: 'udp' }
        - { port: '8472', proto: 'udp' }
        - { port: '10250', proto: 'tcp' }
        - { port: '10251', proto: 'tcp' }
        - { port: '10252', proto: 'tcp' }
        - { port: '10255', proto: 'tcp' }
      notify:
        - Reload and enable firewall

    - name: Enable kernel modules and disable swap
      block:
        - name: Create /etc/modules-load.d/k8s.conf file
          copy:
            dest: /etc/modules-load.d/k8s.conf
            content: |
              overlay
              br-netfilter

        - name: Create /etc/sysctl.d/k8s.conf file
          copy:
            dest: /etc/sysctl.d/k8s.conf
            content: |
              net.bridge.bridge-nf-call-iptables  = 1
              net.bridge.bridge-nf-call-ip6tables = 1
              net.ipv4.ip_forward                 = 1

        - name: Apply sysctl configurations
          command: sysctl --system

        - name: Disable swap
          command: swapoff -a

    - name: Install containerd
      block:
        - name: Download Docker GPG key
          ansible.builtin.apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg

        - name: Add Docker repository
          ansible.builtin.apt_repository:
            repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable
            filename: docker
            state: present

        - name: Update apt package index
          ansible.builtin.apt:
            update_cache: yes

        - name: Install containerd.io
          ansible.builtin.apt:
            name: containerd.io
            state: present

    - name: Configure containerd
      block:
        - name: Enable and start containerd service
          systemd:
            name: containerd
            enabled: yes
            state: started

        - name: Create /etc/containerd/config.toml file
          ansible.builtin.command: containerd config default
          register: containerd_config
          changed_when: false
        
        - name: Write into /etc/containerd/config.toml
          copy:
            content: "{{ containerd_config.stdout }}"
            dest: /etc/containerd/config.toml
            owner: root
            group: root
            mode: '0644'

        - name: Modify /etc/containerd/config.toml to enable SystemdCgroup
          lineinfile:
            path: /etc/containerd/config.toml
            regexp: '^SystemdCgroup = false'
            line: 'SystemdCgroup = true'
          notify:
            - Restart containerd service

    - name: Install kubeadm, kubelet, and kubectl using snap
      block:
        - name: Install conntrack
          ansible.builtin.apt:
            name: conntrack
            state: present
            
        - name: Install snapd
          ansible.builtin.package:
            name: snapd
            state: present

        - name: Ensure snapd service is running
          ansible.builtin.service:
            name: snapd
            state: started
            enabled: true

        - name: Install kubectl snap
          ansible.builtin.command:
            cmd: snap install kubectl --classic

        - name: Install kubelet snap
          ansible.builtin.command:
            cmd: snap install kubelet --classic

        - name: Install kubeadm snap
          ansible.builtin.command:
            cmd: snap install kubeadm --classic

        - name: Hold kubectl
          ansible.builtin.command:
            cmd: snap refresh --hold kubectl

        - name: Hold kubelet
          ansible.builtin.command:
            cmd: snap refresh --hold kubelet

        - name: Hold kubeadm
          ansible.builtin.command:
            cmd: snap refresh --hold kubeadm

  handlers:
    - name: Reload and enable firewall
      community.general.ufw:
        state: enabled
        policy: allow

    - name: Restart containerd service
      systemd:
        name: containerd
        state: restarted